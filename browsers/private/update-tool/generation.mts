import {Browser} from '@puppeteer/browsers';
import {BrowserBinaryInfo} from './download.mjs';

export interface RepoInfo {
  url: string;
  integrity: string;
  exclude_patterns: string[];
  named_files: Record<string, string>;
}

export type Versions = Record<string, Record<string, RepoInfo>>;

export function generateRepoInfo(
  binaries: BrowserBinaryInfo[],
): Record<string, RepoInfo> {
  const repos: Record<string, RepoInfo> = {};

  for (const binary of binaries) {
    repos[binary.platform] = {
      url: binary.url.toString(),
      integrity: binary.sha256,
      exclude_patterns: binary.excludeFilesForPerformance,
      named_files: binary.namedFiles,
    };
  }

  return repos;
}

export function generateVersionsBzlFile(
  browserName: string,
  defaultVersion: string,
  versions: Versions,
): string {
  return `"""Available versions of "${browserName}".

DO NOT EDIT. Generated by ${process.env['JS_BINARY__TARGET']}.
"""

DEFAULT_VERSION = "${defaultVersion}"

VERSIONS = ${JSON.stringify(versions, null, 4)}
`;
}
